%%% -------------------------------------------------------------------
%%% @author  : Joq Erlang
%%% @doc: : 
%%% Created :
%%% Node end point  
%%% Creates and deletes Pods
%%% 
%%% API-kube: Interface 
%%% Pod consits beams from all services, app and app and sup erl.
%%% The setup of envs is
%%% -------------------------------------------------------------------
-module(worker).   
 
-export([
	 create/4,
	 delete/4,
	 workers/0
	]).
%% --------------------------------------------------------------------
%% Include files
%% --------------------------------------------------------------------

%% --------------------------------------------------------------------
%% Function: available_hosts()
%% Description: Based on hosts.config file checks which hosts are avaible
%% Returns: List({HostId,Ip,SshPort,Uid,Pwd}
%% --------------------------------------------------------------------
create(ClusterNode,ClusterCookie,HostName,WorkerNodeName,WorkerDir,Args)-> 
    dist_lib:rmdir_r(ClusterNode,ClusterCookie,WorkerDir),
    Result=case dist_lib:mkdir(ClusterNode,ClusterCookie,ClusterDir) of
	       {error,Reason}->
		   {error,[Reason,HostName,ClusterNodeName,ClusterCookie]};
	       ok->
		   case dist_lib:cmd(ClusterNode,ClusterCookie,filelib,is_dir,[ClusterDir],5000) of
		       false->
			   {error,[cluster_dir_eexists,ClusterDir,HostName,ClusterNodeName,ClusterCookie]};
		       true->
			   case dist_lib:cmd(ClusterNode,ClusterCookie,slave,start,[HostName,WorkerNodeName,Args],5000) of
			       {error,Reason}->
				   dist_lib:rmdir_r(ClusterNode,ClusterCookie,WorkerDir),
				    {error,Reason};
			        {ok,WorkerNode}->
				   case dist_lib:cmd(ClusterNode,ClusterCookie,net_adm,ping,[WorkerNode],3000) of
				       pang->
					   dist_lib:rmdir_r(ClusterNode,ClusterCookie,WorkerDir),
					   {error,[failed_to_connect,WorkerNode]};
				       pong->
					   {ok,WorkerNode}
				   end
			   end
		   end
	   end,
    Result.

%% --------------------------------------------------------------------
%% Function: available_hosts()
%% Description: Based on hosts.config file checks which hosts are avaible
%% Returns: List({HostId,Ip,SshPort,Uid,Pwd}
%% --------------------------------------------------------------------

delete(ClusterNode,ClusterCookie,WorkerNode)->
    dist_lib:rmdir_r(ClusterNode,ClusterCookie,ClusterDir),
    dist_lib:cmd(ClusterNode,ClusterCookie,slave,stop,[WorkerNode],5000).

%% --------------------------------------------------------------------
%% Function: available_hosts()
%% Description: Based on hosts.config file checks which hosts are avaible
%% Returns: List({HostId,Ip,SshPort,Uid,Pwd}
%% --------------------------------------------------------------------
workers(ClusterNode,ClusterCookie)->
    dist_lib:cmd(ClusterNode,ClusterCookie,erlang,nodes,[],5000).
